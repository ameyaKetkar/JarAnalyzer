package ca.concordia.jaranalyzer.DBModels.generated;

import ca.concordia.jaranalyzer.DBModels.JarAnalysisApplication;
import ca.concordia.jaranalyzer.DBModels.JarAnalysisApplicationBuilder;
import ca.concordia.jaranalyzer.DBModels.JarAnalysisApplicationImpl;
import ca.concordia.jaranalyzer.DBModels.jaranalysis.jaranalysis.classinformation.ClassInformationManagerImpl;
import ca.concordia.jaranalyzer.DBModels.jaranalysis.jaranalysis.classinformation.ClassInformationSqlAdapter;
import ca.concordia.jaranalyzer.DBModels.jaranalysis.jaranalysis.commits.CommitsManagerImpl;
import ca.concordia.jaranalyzer.DBModels.jaranalysis.jaranalysis.commits.CommitsSqlAdapter;
import ca.concordia.jaranalyzer.DBModels.jaranalysis.jaranalysis.commitsjar.CommitsJarManagerImpl;
import ca.concordia.jaranalyzer.DBModels.jaranalysis.jaranalysis.commitsjar.CommitsJarSqlAdapter;
import ca.concordia.jaranalyzer.DBModels.jaranalysis.jaranalysis.fieldinformation.FieldInformationManagerImpl;
import ca.concordia.jaranalyzer.DBModels.jaranalysis.jaranalysis.fieldinformation.FieldInformationSqlAdapter;
import ca.concordia.jaranalyzer.DBModels.jaranalysis.jaranalysis.jarinformation.JarInformationManagerImpl;
import ca.concordia.jaranalyzer.DBModels.jaranalysis.jaranalysis.jarinformation.JarInformationSqlAdapter;
import ca.concordia.jaranalyzer.DBModels.jaranalysis.jaranalysis.methodargtypeinformation.MethodArgTypeInformationManagerImpl;
import ca.concordia.jaranalyzer.DBModels.jaranalysis.jaranalysis.methodargtypeinformation.MethodArgTypeInformationSqlAdapter;
import ca.concordia.jaranalyzer.DBModels.jaranalysis.jaranalysis.methodinformation.MethodInformationManagerImpl;
import ca.concordia.jaranalyzer.DBModels.jaranalysis.jaranalysis.methodinformation.MethodInformationSqlAdapter;
import ca.concordia.jaranalyzer.DBModels.jaranalysis.jaranalysis.packageinformation.PackageInformationManagerImpl;
import ca.concordia.jaranalyzer.DBModels.jaranalysis.jaranalysis.packageinformation.PackageInformationSqlAdapter;
import ca.concordia.jaranalyzer.DBModels.jaranalysis.jaranalysis.projects.ProjectsManagerImpl;
import ca.concordia.jaranalyzer.DBModels.jaranalysis.jaranalysis.projects.ProjectsSqlAdapter;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.common.injector.Injector;
import com.speedment.runtime.application.AbstractApplicationBuilder;

/**
 * A generated base {@link
 * com.speedment.runtime.application.AbstractApplicationBuilder} class for the
 * {@link com.speedment.runtime.config.Project} named JarAnalysis.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedJarAnalysisApplicationBuilder extends AbstractApplicationBuilder<JarAnalysisApplication, JarAnalysisApplicationBuilder> {
    
    protected GeneratedJarAnalysisApplicationBuilder() {
        super(JarAnalysisApplicationImpl.class, GeneratedJarAnalysisMetadata.class);
        withManager(ClassInformationManagerImpl.class);
        withManager(CommitsManagerImpl.class);
        withManager(CommitsJarManagerImpl.class);
        withManager(FieldInformationManagerImpl.class);
        withManager(JarInformationManagerImpl.class);
        withManager(MethodArgTypeInformationManagerImpl.class);
        withManager(MethodInformationManagerImpl.class);
        withManager(PackageInformationManagerImpl.class);
        withManager(ProjectsManagerImpl.class);
        withComponent(ClassInformationSqlAdapter.class);
        withComponent(CommitsSqlAdapter.class);
        withComponent(CommitsJarSqlAdapter.class);
        withComponent(FieldInformationSqlAdapter.class);
        withComponent(JarInformationSqlAdapter.class);
        withComponent(MethodArgTypeInformationSqlAdapter.class);
        withComponent(MethodInformationSqlAdapter.class);
        withComponent(PackageInformationSqlAdapter.class);
        withComponent(ProjectsSqlAdapter.class);
    }
    
    @Override
    public JarAnalysisApplication build(Injector injector) {
        return injector.getOrThrow(JarAnalysisApplication.class);
    }
}