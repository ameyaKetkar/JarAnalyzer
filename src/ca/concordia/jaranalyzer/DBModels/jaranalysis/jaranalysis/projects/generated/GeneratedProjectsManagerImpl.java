package ca.concordia.jaranalyzer.DBModels.jaranalysis.jaranalysis.projects.generated;

import ca.concordia.jaranalyzer.DBModels.jaranalysis.jaranalysis.projects.Projects;
import ca.concordia.jaranalyzer.DBModels.jaranalysis.jaranalysis.projects.ProjectsManager;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.manager.AbstractManager;
import com.speedment.runtime.field.Field;

import java.util.stream.Stream;

/**
 * The generated base implementation for the manager of every {@link
 * ca.concordia.jaranalyzer.DBModels.jaranalysis.jaranalysis.projects.Projects}
 * entity.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedProjectsManagerImpl 
extends AbstractManager<Projects> 
implements GeneratedProjectsManager {
    
    private final TableIdentifier<Projects> tableIdentifier;
    
    protected GeneratedProjectsManagerImpl() {
        this.tableIdentifier = TableIdentifier.of("JarAnalysis", "JarAnalysis", "Projects");
    }
    
    @Override
    public TableIdentifier<Projects> getTableIdentifier() {
        return tableIdentifier;
    }
    
    @Override
    public Stream<Field<Projects>> fields() {
        return ProjectsManager.FIELDS.stream();
    }
    
    @Override
    public Stream<Field<Projects>> primaryKeyFields() {
        return Stream.of(
            Projects.ID
        );
    }
}