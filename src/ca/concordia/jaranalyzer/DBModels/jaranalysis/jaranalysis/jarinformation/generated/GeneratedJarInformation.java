package ca.concordia.jaranalyzer.DBModels.jaranalysis.jaranalysis.jarinformation.generated;

import ca.concordia.jaranalyzer.DBModels.jaranalysis.jaranalysis.jarinformation.JarInformation;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.ColumnIdentifier;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.field.IntField;
import com.speedment.runtime.field.StringField;
import com.speedment.runtime.typemapper.TypeMapper;

/**
 * The generated base for the {@link
 * ca.concordia.jaranalyzer.DBModels.jaranalysis.jaranalysis.jarinformation.JarInformation}-interface
 * representing entities of the {@code JarInformation}-table in the database.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public interface GeneratedJarInformation {
    
    /**
     * This Field corresponds to the {@link JarInformation} field that can be
     * obtained using the {@link JarInformation#getId()} method.
     */
    IntField<JarInformation, Integer> ID = IntField.create(
        Identifier.ID,
        JarInformation::getId,
        JarInformation::setId,
        TypeMapper.primitive(),
        true
    );
    /**
     * This Field corresponds to the {@link JarInformation} field that can be
     * obtained using the {@link JarInformation#getArtifactId()} method.
     */
    StringField<JarInformation, String> ARTIFACT_ID = StringField.create(
        Identifier.ARTIFACT_ID,
        JarInformation::getArtifactId,
        JarInformation::setArtifactId,
        TypeMapper.identity(),
        false
    );
    /**
     * This Field corresponds to the {@link JarInformation} field that can be
     * obtained using the {@link JarInformation#getGroupId()} method.
     */
    StringField<JarInformation, String> GROUP_ID = StringField.create(
        Identifier.GROUP_ID,
        JarInformation::getGroupId,
        JarInformation::setGroupId,
        TypeMapper.identity(),
        false
    );
    /**
     * This Field corresponds to the {@link JarInformation} field that can be
     * obtained using the {@link JarInformation#getVersion()} method.
     */
    StringField<JarInformation, String> VERSION = StringField.create(
        Identifier.VERSION,
        JarInformation::getVersion,
        JarInformation::setVersion,
        TypeMapper.identity(),
        false
    );
    
    /**
     * Returns the id of this JarInformation. The id field corresponds to the
     * database column JarAnalysis.JarAnalysis.JarInformation.ID.
     * 
     * @return the id of this JarInformation
     */
    int getId();
    
    /**
     * Returns the artifactId of this JarInformation. The artifactId field
     * corresponds to the database column
     * JarAnalysis.JarAnalysis.JarInformation.ArtifactId.
     * 
     * @return the artifactId of this JarInformation
     */
    String getArtifactId();
    
    /**
     * Returns the groupId of this JarInformation. The groupId field corresponds
     * to the database column JarAnalysis.JarAnalysis.JarInformation.GroupId.
     * 
     * @return the groupId of this JarInformation
     */
    String getGroupId();
    
    /**
     * Returns the version of this JarInformation. The version field corresponds
     * to the database column JarAnalysis.JarAnalysis.JarInformation.Version.
     * 
     * @return the version of this JarInformation
     */
    String getVersion();
    
    /**
     * Sets the id of this JarInformation. The id field corresponds to the
     * database column JarAnalysis.JarAnalysis.JarInformation.ID.
     * 
     * @param id to set of this JarInformation
     * @return   this JarInformation instance
     */
    JarInformation setId(int id);
    
    /**
     * Sets the artifactId of this JarInformation. The artifactId field
     * corresponds to the database column
     * JarAnalysis.JarAnalysis.JarInformation.ArtifactId.
     * 
     * @param artifactId to set of this JarInformation
     * @return           this JarInformation instance
     */
    JarInformation setArtifactId(String artifactId);
    
    /**
     * Sets the groupId of this JarInformation. The groupId field corresponds to
     * the database column JarAnalysis.JarAnalysis.JarInformation.GroupId.
     * 
     * @param groupId to set of this JarInformation
     * @return        this JarInformation instance
     */
    JarInformation setGroupId(String groupId);
    
    /**
     * Sets the version of this JarInformation. The version field corresponds to
     * the database column JarAnalysis.JarAnalysis.JarInformation.Version.
     * 
     * @param version to set of this JarInformation
     * @return        this JarInformation instance
     */
    JarInformation setVersion(String version);
    
    enum Identifier implements ColumnIdentifier<JarInformation> {
        
        ID          ("ID"),
        ARTIFACT_ID ("ArtifactId"),
        GROUP_ID    ("GroupId"),
        VERSION     ("Version");
        
        private final String columnId;
        private final TableIdentifier<JarInformation> tableIdentifier;
        
        Identifier(String columnId) {
            this.columnId        = columnId;
            this.tableIdentifier = TableIdentifier.of(    getDbmsId(), 
                getSchemaId(), 
                getTableId());
        }
        
        @Override
        public String getDbmsId() {
            return "JarAnalysis";
        }
        
        @Override
        public String getSchemaId() {
            return "JarAnalysis";
        }
        
        @Override
        public String getTableId() {
            return "JarInformation";
        }
        
        @Override
        public String getColumnId() {
            return this.columnId;
        }
        
        @Override
        public TableIdentifier<JarInformation> asTableIdentifier() {
            return this.tableIdentifier;
        }
    }
}