package us.orgst.DBModels.jaranalysis.jaranalysis.package_information.generated;

import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.core.manager.Manager;
import us.orgst.DBModels.jaranalysis.jaranalysis.jar_information.JarInformation;
import us.orgst.DBModels.jaranalysis.jaranalysis.package_information.PackageInformation;

import java.util.Objects;
import java.util.StringJoiner;

/**
 * The generated base implementation of the {@link
 * us.orgst.DBModels.jaranalysis.jaranalysis.package_information.PackageInformation}-interface.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedPackageInformationImpl implements PackageInformation {
    
    private long id;
    private int jarId;
    private String name;
    
    protected GeneratedPackageInformationImpl() {}
    
    @Override
    public long getId() {
        return id;
    }
    
    @Override
    public int getJarId() {
        return jarId;
    }
    
    @Override
    public String getName() {
        return name;
    }
    
    @Override
    public PackageInformation setId(long id) {
        this.id = id;
        return this;
    }
    
    @Override
    public PackageInformation setJarId(int jarId) {
        this.jarId = jarId;
        return this;
    }
    
    @Override
    public PackageInformation setName(String name) {
        this.name = name;
        return this;
    }
    
    @Override
    public JarInformation findJarId(Manager<JarInformation> foreignManager) {
        return foreignManager.stream().filter(JarInformation.ID.equal(getJarId())).findAny().orElse(null);
    }
    
    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("id = "    + Objects.toString(getId()));
        sj.add("jarId = " + Objects.toString(getJarId()));
        sj.add("name = "  + Objects.toString(getName()));
        return "PackageInformationImpl " + sj.toString();
    }
    
    @Override
    public boolean equals(Object that) {
        if (this == that) { return true; }
        if (!(that instanceof PackageInformation)) { return false; }
        final PackageInformation thatPackageInformation = (PackageInformation)that;
        if (this.getId() != thatPackageInformation.getId()) { return false; }
        if (this.getJarId() != thatPackageInformation.getJarId()) { return false; }
        if (!Objects.equals(this.getName(), thatPackageInformation.getName())) { return false; }
        return true;
    }
    
    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Long.hashCode(getId());
        hash = 31 * hash + Integer.hashCode(getJarId());
        hash = 31 * hash + Objects.hashCode(getName());
        return hash;
    }
}