package us.orgst.DBModels.jaranalysis.jaranalysis.method_arg_type_information.generated;

import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.ColumnIdentifier;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.util.OptionalUtil;
import com.speedment.runtime.field.ComparableField;
import com.speedment.runtime.field.StringField;
import com.speedment.runtime.typemapper.TypeMapper;
import us.orgst.DBModels.jaranalysis.jaranalysis.method_arg_type_information.MethodArgTypeInformation;

import java.util.Optional;
import java.util.OptionalLong;

/**
 * The generated base for the {@link
 * us.orgst.DBModels.jaranalysis.jaranalysis.method_arg_type_information.MethodArgTypeInformation}-interface
 * representing entities of the {@code method_arg_type_information}-table in the
 * database.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public interface GeneratedMethodArgTypeInformation {
    
    /**
     * This Field corresponds to the {@link MethodArgTypeInformation} field that
     * can be obtained using the {@link MethodArgTypeInformation#getMethodId()}
     * method.
     */
    ComparableField<MethodArgTypeInformation, Long, Long> METHOD_ID = ComparableField.create(
        Identifier.METHOD_ID,
        o -> OptionalUtil.unwrap(o.getMethodId()),
        MethodArgTypeInformation::setMethodId,
        TypeMapper.identity(),
        false
    );
    /**
     * This Field corresponds to the {@link MethodArgTypeInformation} field that
     * can be obtained using the {@link MethodArgTypeInformation#getType()}
     * method.
     */
    StringField<MethodArgTypeInformation, String> TYPE = StringField.create(
        Identifier.TYPE,
        o -> OptionalUtil.unwrap(o.getType()),
        MethodArgTypeInformation::setType,
        TypeMapper.identity(),
        false
    );
    
    /**
     * Returns the methodId of this MethodArgTypeInformation. The methodId field
     * corresponds to the database column
     * jaranalysis.jaranalysis.method_arg_type_information.MethodId.
     * 
     * @return the methodId of this MethodArgTypeInformation
     */
    OptionalLong getMethodId();
    
    /**
     * Returns the type of this MethodArgTypeInformation. The type field
     * corresponds to the database column
     * jaranalysis.jaranalysis.method_arg_type_information.Type.
     * 
     * @return the type of this MethodArgTypeInformation
     */
    Optional<String> getType();
    
    /**
     * Sets the methodId of this MethodArgTypeInformation. The methodId field
     * corresponds to the database column
     * jaranalysis.jaranalysis.method_arg_type_information.MethodId.
     * 
     * @param methodId to set of this MethodArgTypeInformation
     * @return         this MethodArgTypeInformation instance
     */
    MethodArgTypeInformation setMethodId(Long methodId);
    
    /**
     * Sets the type of this MethodArgTypeInformation. The type field
     * corresponds to the database column
     * jaranalysis.jaranalysis.method_arg_type_information.Type.
     * 
     * @param type to set of this MethodArgTypeInformation
     * @return     this MethodArgTypeInformation instance
     */
    MethodArgTypeInformation setType(String type);
    
    enum Identifier implements ColumnIdentifier<MethodArgTypeInformation> {
        
        METHOD_ID ("MethodId"),
        TYPE      ("Type");
        
        private final String columnId;
        private final TableIdentifier<MethodArgTypeInformation> tableIdentifier;
        
        Identifier(String columnId) {
            this.columnId        = columnId;
            this.tableIdentifier = TableIdentifier.of(    getDbmsId(), 
                getSchemaId(), 
                getTableId());
        }
        
        @Override
        public String getDbmsId() {
            return "jaranalysis";
        }
        
        @Override
        public String getSchemaId() {
            return "jaranalysis";
        }
        
        @Override
        public String getTableId() {
            return "method_arg_type_information";
        }
        
        @Override
        public String getColumnId() {
            return this.columnId;
        }
        
        @Override
        public TableIdentifier<MethodArgTypeInformation> asTableIdentifier() {
            return this.tableIdentifier;
        }
    }
}