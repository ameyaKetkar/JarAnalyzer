package us.orgst.DBModels.jaranalysis.jaranalysis.method_arg_type_information.generated;

import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.core.util.OptionalUtil;
import us.orgst.DBModels.jaranalysis.jaranalysis.method_arg_type_information.MethodArgTypeInformation;

import java.util.Objects;
import java.util.Optional;
import java.util.OptionalLong;
import java.util.StringJoiner;

/**
 * The generated base implementation of the {@link
 * us.orgst.DBModels.jaranalysis.jaranalysis.method_arg_type_information.MethodArgTypeInformation}-interface.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedMethodArgTypeInformationImpl implements MethodArgTypeInformation {
    
    private Long methodId;
    private String type;
    
    protected GeneratedMethodArgTypeInformationImpl() {}
    
    @Override
    public OptionalLong getMethodId() {
        return OptionalUtil.ofNullable(methodId);
    }
    
    @Override
    public Optional<String> getType() {
        return Optional.ofNullable(type);
    }
    
    @Override
    public MethodArgTypeInformation setMethodId(Long methodId) {
        this.methodId = methodId;
        return this;
    }
    
    @Override
    public MethodArgTypeInformation setType(String type) {
        this.type = type;
        return this;
    }
    
    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("methodId = " + Objects.toString(OptionalUtil.unwrap(getMethodId())));
        sj.add("type = "     + Objects.toString(OptionalUtil.unwrap(getType())));
        return "MethodArgTypeInformationImpl " + sj.toString();
    }
    
    @Override
    public boolean equals(Object that) {
        if (this == that) { return true; }
        if (!(that instanceof MethodArgTypeInformation)) { return false; }
        final MethodArgTypeInformation thatMethodArgTypeInformation = (MethodArgTypeInformation)that;
        if (!Objects.equals(this.getMethodId(), thatMethodArgTypeInformation.getMethodId())) { return false; }
        if (!Objects.equals(this.getType(), thatMethodArgTypeInformation.getType())) { return false; }
        return true;
    }
    
    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Objects.hashCode(OptionalUtil.unwrap(getMethodId()));
        hash = 31 * hash + Objects.hashCode(OptionalUtil.unwrap(getType()));
        return hash;
    }
}